# Default values for Neo4j.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

name: $APP_INSTANCE_NAME
APP_INSTANCE_NAME: $APP_INSTANCE_NAME

# Specs for the Neo4j docker image
image: $image
imageTag: "3.3.5-enterprise"
ubbAgentImage: "gcr.io/neo4j-k8s-marketplace-public/ubbagent:neo4j"
imagePullPolicy: "IfNotPresent"
# imagePullSecret: registry-secret
acceptLicenseAgreement: "no"
podDisruptionBudget: {}
  # minAvailable: 2
  # maxUnavailable: 1

# Use password authentication
authEnabled: $authEnabled

## Specify password for neo4j user
## Defaults to a random 10-character alphanumeric string if not set and authEnabled is true
# neo4jPassword:

# Specs for the images used for running tests against the Helm package
testImage: "gcr.io/neo4j-k8s-marketplace-public/markhneedham/k8s-kubectl"
testImageTag: "master"

######################
#### CORE SERVERS  ###
######################
coreServers: $coreServers
coreSidecarContainers: []

## init containers to run before the Neo4j replica pod e.g. to install plugins
# - name: init-plugins
#   image: "appropriate/curl:latest"
#   imagePullPolicy: "IfNotPresent"
#   volumeMounts:
#   - name: plugins
#     mountPath: /plugins
#   command:
#     - "/bin/sh"
#     - "-c"
#     - |
#       curl -L https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/3.2.0.3/apoc-3.2.0.3-all.jar -O
#       cp apoc-3.2.0.3-all.jar /plugins/
coreInitContainers: []
volumeMountPath: /data
volumeAnnotations: {}

## Subdirectory of core server data Persistent Volume to mount
## Useful if the volume's root directory is not empty
##
# coreVolumeSubPath: ""
volumeSize: $volumeSize
## core server data Persistent Volume Storage Class
## If defined, storageClassName: <storageClass>
## If set to "-", storageClassName: "", which disables dynamic provisioning
## If undefined (the default) or set to null, no storageClassName spec is
##   set, choosing the default provisioner.  (gp2 on AWS, standard on
##   GKE, AWS & OpenStack)
volumeStorageClass: $volumeStorageClass

# Pass extra vars if needed to neo4j docker containers
# coreExtraVars:
# - name: EXTRA_VAR_1
#   value: extra-var-value-1
# - name: EXTRA_VAR_2
#   value: extra-var-value-2

######################
#### READ REPLICAS ###
######################
readReplicaServers: $readReplicaServers

# readReplicaExtraVars:
# - name: EXTRA_VAR_1
#   value: extra-var-value-1
# - name: EXTRA_VAR_2
#   value: extra-var-value-2
readReplicaInitContainers: []

resources:
 requests:
   cpu: $cpu
   memory: $mem
# limits:
#   cpu: 100m
#   memory: 512Mi
